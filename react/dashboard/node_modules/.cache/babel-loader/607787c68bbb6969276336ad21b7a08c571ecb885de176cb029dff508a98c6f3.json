{"ast":null,"code":"var _jsxFileName = \"/home/rm10/ALX/rm-code_days/react/dashboard/src/show_hide.js\";\nimport React, { Component } from \"react\";\nimport Notifications from \"./Notifications\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass ShowHide extends Component {\n  constructor() {\n    super();\n    this.state = {\n      show: true\n    };\n  }\n  hideNot() {\n    this.setState({\n      show: !this.state.show // ! is a ne\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.state.show ? /*#__PURE__*/_jsxDEV(Notifications, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 28\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          this.hideNot();\n        },\n        children: \"Show/Hide Notifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default ShowHide;","map":{"version":3,"names":["React","Component","Notifications","jsxDEV","_jsxDEV","ShowHide","constructor","state","show","hideNot","setState","render","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick"],"sources":["/home/rm10/ALX/rm-code_days/react/dashboard/src/show_hide.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport Notifications from \"./Notifications\";\n\nclass ShowHide extends Component {\n  constructor() {\n    super();\n    this.state = {\n      show : true\n    }\n  }\n  hideNot() {\n    this.setState({\n      show: !this.state.show // ! is a ne\n    })\n  }\n  render() {\n    return (\n      <div>\n        {/* Ternary operator: also known as the conditional operator.\n        It allows you to assign a value or perform an operation\n        based on a condition, all in a single line of code.\n\n        ## Syntax: condition ? expressionIfTrue : expressionIfFalse */}\n        {this.state.show ? <Notifications /> : null }\n        <button onClick={() => {this.hideNot()}}>Show/Hide Notifications</button>\n      </div>\n    );\n  }\n}\n\nexport default ShowHide;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,QAAQ,SAASJ,SAAS,CAAC;EAC/BK,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,CAAC;IACP,IAAI,CAACC,KAAK,GAAG;MACXC,IAAI,EAAG;IACT,CAAC;EACH;EACAC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,QAAQ,CAAC;MACZF,IAAI,EAAE,CAAC,IAAI,CAACD,KAAK,CAACC,IAAI,CAAC;IACzB,CAAC,CAAC;EACJ;EACAG,MAAMA,CAAA,EAAG;IACP,oBACEP,OAAA;MAAAQ,QAAA,GAMG,IAAI,CAACL,KAAK,CAACC,IAAI,gBAAGJ,OAAA,CAACF,aAAa;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,GAAG,IAAI,eAC3CZ,OAAA;QAAQa,OAAO,EAAEA,CAAA,KAAM;UAAC,IAAI,CAACR,OAAO,CAAC,CAAC;QAAA,CAAE;QAAAG,QAAA,EAAC;MAAuB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtE,CAAC;EAEV;AACF;AAEA,eAAeX,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}